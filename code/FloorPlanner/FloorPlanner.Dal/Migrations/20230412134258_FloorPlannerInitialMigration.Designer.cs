// <auto-generated />
using System;
using FloorPlanner.Dal.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FloorPlanner.Dal.Migrations
{
    [DbContext(typeof(FloorPlannerDbContext))]
    [Migration("20230412134258_FloorPlannerInitialMigration")]
    partial class FloorPlannerInitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FloorPlanner.Dal.Entities.BuildingObject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<byte>("BuildingObjectType")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Direction")
                        .HasColumnType("tinyint");

                    b.Property<int>("FloorId")
                        .HasColumnType("int");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<int>("Length")
                        .HasColumnType("int");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.Property<int>("X")
                        .HasColumnType("int");

                    b.Property<int>("Y")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_BuildingObject");

                    b.HasIndex("FloorId");

                    b.ToTable("BuildingObject", (string)null);
                });

            modelBuilder.Entity("FloorPlanner.Dal.Entities.Floor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTimeOffset>("LastModificationTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Length")
                        .HasColumnType("int");

                    b.Property<int>("PlanId")
                        .HasColumnType("int");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.Property<int>("X")
                        .HasColumnType("int");

                    b.Property<int>("Y")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_Floor");

                    b.HasIndex("PlanId");

                    b.ToTable("Floor", (string)null);
                });

            modelBuilder.Entity("FloorPlanner.Dal.Entities.Furniture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("FloorId")
                        .HasColumnType("int");

                    b.Property<byte>("FurnitureType")
                        .HasColumnType("tinyint");

                    b.Property<string>("ImgPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Length")
                        .HasColumnType("int");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.Property<int>("X")
                        .HasColumnType("int");

                    b.Property<int>("Y")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_Furniture");

                    b.HasIndex("FloorId");

                    b.ToTable("Furniture", (string)null);
                });

            modelBuilder.Entity("FloorPlanner.Dal.Entities.Plan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BaseLength")
                        .HasColumnType("int");

                    b.Property<int>("BaseWidth")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("CreationDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserProfileId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_Plan");

                    b.HasIndex("UserProfileId");

                    b.ToTable("Plan", (string)null);
                });

            modelBuilder.Entity("FloorPlanner.Dal.Entities.UserProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Domain")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("LanguageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id")
                        .HasName("PK_UserProfile");

                    b.HasIndex("Domain", "UserName")
                        .IsUnique()
                        .HasFilter("[Domain] IS NOT NULL AND [UserName] IS NOT NULL");

                    b.ToTable("UserProfile", (string)null);
                });

            modelBuilder.Entity("FloorPlanner.Dal.Entities.BuildingObject", b =>
                {
                    b.HasOne("FloorPlanner.Dal.Entities.Floor", "Floor")
                        .WithMany("BuildingObjects")
                        .HasForeignKey("FloorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("Fk_Floor_BuildingObject");

                    b.Navigation("Floor");
                });

            modelBuilder.Entity("FloorPlanner.Dal.Entities.Floor", b =>
                {
                    b.HasOne("FloorPlanner.Dal.Entities.Plan", "Plan")
                        .WithMany("Floors")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("Fk_Plan_Floor");

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("FloorPlanner.Dal.Entities.Furniture", b =>
                {
                    b.HasOne("FloorPlanner.Dal.Entities.Floor", "Floor")
                        .WithMany("Furnitures")
                        .HasForeignKey("FloorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("Fk_Floor_Furniture");

                    b.Navigation("Floor");
                });

            modelBuilder.Entity("FloorPlanner.Dal.Entities.Plan", b =>
                {
                    b.HasOne("FloorPlanner.Dal.Entities.UserProfile", "UserProfile")
                        .WithMany("Plans")
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("Fk_UserProfile_Plan");

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("FloorPlanner.Dal.Entities.Floor", b =>
                {
                    b.Navigation("BuildingObjects");

                    b.Navigation("Furnitures");
                });

            modelBuilder.Entity("FloorPlanner.Dal.Entities.Plan", b =>
                {
                    b.Navigation("Floors");
                });

            modelBuilder.Entity("FloorPlanner.Dal.Entities.UserProfile", b =>
                {
                    b.Navigation("Plans");
                });
#pragma warning restore 612, 618
        }
    }
}
