// <auto-generated />
using System;
using FloorPlanner.Dal.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FloorPlanner.Dal.Migrations
{
    [DbContext(typeof(FloorPlannerDbContext))]
    [Migration("20230322155900_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Core.Translation.Dal.Entities.Language", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DateTimeFormat")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DecimalSeparator")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IconFilePath")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("TranslationFilePath")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Name");

                    b.ToTable("Language");

                    b.HasData(
                        new
                        {
                            Name = "en",
                            DateTimeFormat = "yyyy.MM.dd. HH:mm",
                            DecimalSeparator = ".",
                            DisplayName = "English",
                            IconFilePath = "flags/en-US.svg",
                            TranslationFilePath = "Translations/en-US.json"
                        },
                        new
                        {
                            Name = "hu",
                            DateTimeFormat = "yyyy.MM.dd. HH:mm",
                            DecimalSeparator = ".",
                            DisplayName = "Hungarian",
                            IconFilePath = "flags/hu-HU.svg",
                            TranslationFilePath = "Translations/hu-HU.json"
                        });
                });

            modelBuilder.Entity("Core.Translation.Dal.Entities.Translation", b =>
                {
                    b.Property<string>("Language")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset>("LastModAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<string>("LastModBy")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("ParametersCount")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Language", "Key");

                    b.ToTable("Translation");
                });

            modelBuilder.Entity("FloorPlanner.Dal.Entities.UserProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Domain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LanguageName");

                    b.ToTable("UserProfile");
                });

            modelBuilder.Entity("Core.Translation.Dal.Entities.Translation", b =>
                {
                    b.HasOne("Core.Translation.Dal.Entities.Language", "LanguageEntity")
                        .WithMany()
                        .HasForeignKey("Language")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Translation_Language");

                    b.Navigation("LanguageEntity");
                });

            modelBuilder.Entity("FloorPlanner.Dal.Entities.UserProfile", b =>
                {
                    b.HasOne("Core.Translation.Dal.Entities.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageName");

                    b.Navigation("Language");
                });
#pragma warning restore 612, 618
        }
    }
}
